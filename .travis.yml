language: python
python:
- "3.6"

services:
  - postgresql
  - rabbitmq

addons:
  postgresql: "10"
  apt:
    packages:
      - singularity-container

before_install:
  # Upgrade pip setuptools and wheel
  - pip install -U wheel setuptools coveralls
  - pip install pip==18.1
  - singularity pull shub://ltalirz/singularity-recipe-zeopp:ansible
    #  # for singularity, see https://github.com/singularityhub/travis-ci/blob/master/.travis.yml
    #  - sudo chmod u+x .travis/*.sh
    #  - /bin/bash .travis/setup.sh

install:
- pip install -e .[testing,pre-commit]
- if [ "$AIIDA_VERSION" == "develop" ]; then .travis-data/install_aiida_github.sh ; fi  # installs develop branch
- reentry scan -r aiida
# add fake network executable
- cat "#!/bin/bash\necho 'network'" > network; chmod +x network

env:
  global:
  - PLUGIN_DIR: aiida-diff
  - TEST_AIIDA_BACKEND: django
  - AIIDA_VERSION: develop
  - AIIDA_DEVELOP_GIT_HASH: 0ca5d991d039dca2261df3d6ad8da2f03d591caa
  # add network executable to PATH
  - PATH=${PATH}:${TRAVIS_BUILD_DIR}
  matrix:
  - TEST_AIIDA_BACKEND: django
    TEST_TYPE: tests
  - TEST_AIIDA_BACKEND: sqlalchemy
    TEST_TYPE: tests
#  - TEST_AIIDA_BACKEND: django
#    TEST_TYPE: docs
    READTHEDOCS: 'True'
  - TEST_AIIDA_BACKEND: django
    TEST_TYPE: pre-commit

  # Remove this to enforce the AiiDA coding style
  allow_failures:
  - TEST_AIIDA_BACKEND: django
    TEST_TYPE: pre-commit

script:
  - |
        if [ "$TEST_TYPE" == "tests" ] ; then
        #    /bin/bash .travis/build.sh Singularity;
            coverage run --source=aiida_zeopp --append manage.py;
        fi  # runs unit tests
  # - if [ "$TEST_TYPE" == "docs" ] ; then cd docs; make; fi  # creates documentation
  # runs precommit checks but doesn't fail if they don't pass
  - if [ "$TEST_TYPE" == "pre-commit" ] ; then pre-commit install; pre-commit run --all-files || ( git status --short; git diff ; exit 1 ); fi
  - singularity exec ltalirz-singularity-recipe-zeopp-master-ansible.simg /usr/local/bin/network

after_success:
  - coveralls
