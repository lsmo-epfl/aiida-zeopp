# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
- job: before_install
  pool:
    vmImage: 'Ubuntu-16.04'
  
  steps:
  - bash: |
      sudo apt-get update &&
      sudo apt-get -y install postgresql postgresql-server-dev-all postgresql-client rabbitmq-server
    displayName: Install postgresql and rabbitmq

  - bash: |
      wget -O- http://neuro.debian.net/lists/trusty.us-nh.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list
      sudo apt-key add .travis.singularity_key.txt
      sudo apt-get update
      sudo apt-get install -y singularity-container
      singularity pull shub://ltalirz/singularity-recipe-zeopp:ansible
    displayName: Install singularity


- job: test
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 4
  dependsOn:
    - before_install

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install pip==18.1
    displayName: 'Fix pip version'

  - script: python -m pip install -e .[testing,pre-commit] && reentry scan
    displayName: 'Install dependencies'

  # this can be removed once aiida-core 1.0.0b2 is released
  - script: .travis-data/install_aiida_github.sh
    displayName: 'Install aiida-core develop version'

  - script: |
      py.test --junitxml=test-results.xml --cov aiida_zeopp --cov-append .
    displayName: 'Run pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: coveralls
  dependsOn:
    - test
  steps:

  - script: coveralls
    displayName: 'Upload test coverage to coveralls.io'


# - job: 'Publish'
#   dependsOn: 'Test'
#   pool:
#     vmImage: 'Ubuntu-16.04'

#   steps:
#   - task: UsePythonVersion@0
#     inputs:
#       versionSpec: '3.x'
#       architecture: 'x64'

#   - script: python setup.py sdist
#     displayName: 'Build sdist'
