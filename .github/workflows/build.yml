name: Build

on: [push, pull_request]

jobs:

  conda-install:

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      #with:
      #  auto-update-conda: true

    - name: Install zeo++
      run: |
        conda install -y -c conda-forge zeopp-lsmo

  #compile:
  #  runs-on: ubuntu-latest
  #  timeout-minutes: 30
  #  steps:
  #  - uses: actions/checkout@v1
  #  - name: Get network binary from cache (or start caching)
  #    id: zeopp-cache
  #    uses: actions/cache@v1
  #    with:
  #      path: ./zeoplusplus/bin
  #      key: zeopp
  #  - name: Install Zeo++
  #    if: steps.zeopp-cache.outputs.cache-hit != 'true'
  #    run: |
  #      git clone https://github.com/lsmo-epfl/zeopp-lsmo -b master zeoplusplus
  #      cd zeoplusplus
  #      wget https://gitlab.com/libeigen/eigen/-/archive/3.2.7/eigen-3.2.7.tar.bz2
  #      tar xf eigen-3.2.7.tar.bz2
  #      cd voro++/src
  #      make
  #      cd ../..
  #      make
  #      mkdir bin
  #      cp network bin

  tests:
    needs: conda-install
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [3.6,3.8]
        backend: ['django']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system dependencies
      run: |
        wget -O - "https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc" | sudo apt-key add -
        echo 'deb https://dl.bintray.com/rabbitmq-erlang/debian bionic erlang' | sudo tee -a /etc/apt/sources.list.d/bintray.rabbitmq.list
        echo 'deb https://dl.bintray.com/rabbitmq/debian bionic main' | sudo tee -a /etc/apt/sources.list.d/bintray.rabbitmq.list
        sudo rm -f /etc/apt/sources.list.d/dotnetdev.list /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt update
        sudo apt install postgresql postgresql-server-dev-all postgresql-client rabbitmq-server graphviz
        sudo systemctl status rabbitmq-server.service 
    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[testing]
        reentry scan -r aiida
    - name: Run pytest
      run: |
        pytest --cov-report=xml --cov=./aiida_zeopp
    - name: Upload coverage to codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./coverage.xml


  pre-commit:
    needs: conda-install
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: [3.8]
        backend: ['django']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[pre-commit]
        reentry scan -r aiida
    - name: Run pre-commit
      run: |
        pre-commit install
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )
